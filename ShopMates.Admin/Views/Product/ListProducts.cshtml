@using ShopMates.ViewModels.Common;
@model PagedResult<ShopMates.ViewModels.Catalog.Products.ProductViewModel>

@{
    ViewData["Title"] = "List Product";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link href="~/vendor/datatables/dataTables.bootstrap4.min.css" rel="stylesheet">
@section Scripts{
    <script>
        setTimeout(function () {
            $('#msgAlert').fadeOut('slow');
        }, 3000);
    </script>
}
<div class="container-fluid">
    <!-- Page Heading -->
    <h1 class="h3 mb-2 text-gray-800">List of Product</h1>
    <!--<p class="mb-4">
        DataTables is a third party plugin that is used to generate the demo table below.
        For more information about DataTables, please visit the <a target="_blank" href="https://datatables.net">official DataTables documentation</a>.
    </p>-->

    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <a class="btn btn-primary" asp-controller="Product" asp-action="Create">Create New One</a>
        </div>
        <div class="card-body">
            <div class="row">
                @if (ViewBag.SuccessMsg != null)
                {
                    <div id="msgAlert" class="alert alert-success" role="alert"> @ViewBag.SuccessMsg </div>
                }
            </div>
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>OriginalPrice</th>
                            <th>Price</th>
                            <th>Stock</th>
                            <th>ViewCount</th>
                            <th>Option</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OriginalPrice)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Stock)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ViewCount)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Update", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Remove", "Delete", new { id = item.Id , name = item.Name })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
